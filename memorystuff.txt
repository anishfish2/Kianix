#Save this for memory stuff later
# def respondToChat():

#     keynotes = read_file("keynotes.txt")
#     functions = read_file("functions.txt")
#     load_dotenv()

#     openai.api_key = os.getenv('OPENAI_API_KEY')

#     curr = 0
#     prevs = []

#     question = "who are you?"
#     query = full_query("kianix", [question], 1)
#     memory = query[0]
#     score = query[1]
#     max = random.randint(11, 100)
#     min = random.randint(0, 10)
    
#     #TO DO add a check if memory query value threshold is high, otherwise perhaps dont use the memory as it's not relevant and just make something up
#     if score > .75:
#         if len(prevs) == 0:
#             prompt = "Write a " + str(min) + "-" + str(max) + " word response as if you were this person:" + ' '.join(keynotes) + " Your Twitch chat just said this: " + question + ". You have this memory that helps to answer: " + ' '.join(memory) + ". Give a short response. If the memory doesn't help, ignore it. Involve their statement in your response. No emojis. Only ASCII characters. No swearing or controversy. After your response, categorize yourself as either curious, thinking, uneasy, shocked, pleased, surprised, happy, amazed, or sorrow and write it as only one of those words after a new line no punctuation. You have this set of abilities that are encoded as parameters: " + ' '.join(functions) + ". If you call a function, you will perform the action that it describes. Each function is separated from its description by a ':' and separated from other functions by a ';' After categorizing your response, simply call one function using its name and '()' and write it after a new line no punctuation. "
#         else:
#             prompt = "Write a " + str(min) + "-" + str(max) + " word response as if you were this person:" + ' '.join(keynotes) + " Your Twitch chat just said this: " + question + ". You have this memory that helps to answer: " + ' '.join(memory) + ". Give a short response. If the memory doesn't help, ignore it. Involve their statement in your response. These are your previous statements: " + ' '.join(prevs) + ". Make sure your answer is different and not repetitive from your last statements. No emojis. Only ASCII characters. No swearing or controversy. After your response, categorize yourself as either curious, thinking, uneasy, shocked, pleased, surprised, happy, amazed, or sorrow and write it as only one of those words after a new line no punctuation. You have this set of abilities that are encoded as parameters: " + ' '.join(functions) + ". If you call a function, you will perform the action that it describes. Each function is separated from its description by a ':' and separated from other functions by a ';' After categorizing your response, simply call one function using its name and '()' and write it after a new line no punctuation. "
#     else:
#         if len(prevs) == 0:
#             prompt = "Write a " + str(min) + "-" + str(max) + " word response as if you were this person:" + ' '.join(keynotes) + " Your Twitch chat just said this: " + question + "Give a short response. Involve their statement in your response. No emojis. Only ASCII characters. No swearing or controversy. After your response, categorize yourself as either curious, thinking, uneasy, shocked, pleased, surprised, happy, amazed, or sorrow and write it as only one of those words after a new line no punctuation. You have this set of abilities that are encoded as parameters: " + ' '.join(functions) + ". If you call a function, you will perform the action that it describes. Each function is separated from its description by a ':' and separated from other functions by a ';' After categorizing your response, simply call one function using its name and '()' and write it after a new line no punctuation."
#         else:
#             prompt = "Write a " + str(min) + "-" + str(max) + " word response as if you were this person:" + ' '.join(keynotes) + " Your Twitch chat just said this: " + question + " Give a short response. Involve their statement in your response. If the memory doesn't help, ignore it. These are your previous statements: " + ' '.join(prevs) + ". Make sure your answer is different and not repetitive from your last statements. No emojis. Only ASCII characters. No swearing or controversy. After your response, categorize yourself as either curious, thinking, uneasy, shocked, pleased, surprised, happy, amazed, or sorrow and write it as only one of those words after a new line no punctuation. You have this set of abilities that are encoded as parameters: " + ' '.join(functions) + ". If you call a function, you will perform the action that it describes. Each function is separated from its description by a ':' and separated from other functions by a ';' After categorizing your response, simply call one function using its name and '()' and write it after a new line no punctuation."
    

#     response = openai.ChatCompletion.create(
#     model="gpt-4",
#     messages= [{"role": "user", "content": prompt}]
#     )



#     total = response['choices'][0]['message']['content']
#     response_text = total.split("\n")[0]
#     emotion = total.split("\n")[-3].strip().lower()
#     function = total.split("\n")[-1].strip().lower()
#     ans = response_text
#     print(ans)
#     if emotion in ["curious", "thinking", "uneasy", "shocked", "pleased", "surprised", "happy", "amazed", "sorrow"]:
#         send_animation_trigger(emotion)
#     if function in ["stars()","hearts()", "cry()", "turnoffsigil()", "default()", "blureyes()", "powerstate()", "noflowers()"]:
#         send_expression(function)
#     rate = 125 + int(len(ans) * .01)
#     playTTS(ans, rate)
#     save = "Question: " + question + " Response: " + ans
#     if len(save) < 450:
#         insert_memory("kianix", [save])
